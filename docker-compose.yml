services:
    db:
        container_name: database
        image: 'pgvector/pgvector:pg17'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'db_data:/var/lib/postgresql/data'
            - './initpgvector.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - rag_net
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
            retries: 3
            timeout: 5s
    app:
        container_name: app_py
        image: 'python:3.11-bullseye'
        ports:
            - '5000:5000'
        env_file:
            - .env
        volumes:
            - './app:/app'
            - '.env:/app/.env'
            - 'pip_cache:/root/.cache/pip'
        working_dir: /app
        command: ./entrypoint.sh
        environment:
            - FLASK_APP=api.py
            - FLASK_DEBUG=1
        networks:
            - rag_net
        depends_on:
            - db
        tty: true
networks:
    rag_net:
        name: rag_net
        driver: bridge
volumes:
    db_data:
        driver: local
    pip_cache:
        driver: local
